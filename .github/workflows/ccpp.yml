name: C/C++ CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    # - name: work
    #   run: sudo bash ./build.sh
    # Following depends on upx installed in ./build.sh
    - name: upx
      run: sudo apt install upx -y
    - name: get-release
      run: bash ./get-release.sh
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1.0.0
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    #   with:
    #     tag_name: latest
    #     release_name: latest
    #     draft: false
    #     prerelease: false
    # - name: Upload Release Asset
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1.0.1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #     asset_path: ./workdir/bin/aria2c.aarch64
    #     asset_name: aria2c.aarch64
    #     asset_content_type: application/octet-stream
    # - name: Upload Multiple Assets
    #   uses: AButler/upload-release-assets@v1.0
    #   with:
    #     files: "./workdir/bin/*"
    #     repo-token: ${{ secrets.GITHUB_TOKEN }}
    #     release-tag: latest
    - uses: meeDamian/github-release@1.0
      with:
        name: latet
        tag: latest
        token: ${{secrets.GITHUB_TOKEN}}
        gzip: false
        files: >
          workdir/bin/aria2c.aarch64
          workdir/bin/aria2c.aarch64.upx
          workdir/bin/aria2c.darwin
          workdir/bin/aria2c.darwin.upx
          workdir/bin/aria2c.win32.exe
          workdir/bin/aria2c.win32.upx.exe
          workdir/bin/aria2c.win64.exe
          workdir/bin/aria2c.win64.upx.exe
        allow_override: true


